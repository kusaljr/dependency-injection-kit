import * as fs from "fs";
import * as path from "path";

export function generateReactView(
  controllerClassName: string,
  methodName: string,
  controllerFilePath: string,
  routePath: string
) {
  const fileDir = path.dirname(controllerFilePath);
  const viewsDir = path.join(fileDir, "views");

  if (!fs.existsSync(viewsDir)) {
    fs.mkdirSync(viewsDir, { recursive: true });
    console.log(`Created directory: ${viewsDir}`);
  }

  const tsxFileName = `${controllerClassName}.${methodName}.tsx`;
  const tsxFilePath = path.join(viewsDir, tsxFileName);
  const componentName = `${controllerClassName}_${methodName}`;

  if (fs.existsSync(tsxFilePath)) {
    return;
  }

  const template = `
/**
 * Auto-generated by @React() for route: ${routePath}
 */


export default function ${componentName}({props}:{props: any}) {
  
  return (
    <div>
      <h1>Data from ${routePath}</h1>
      <div>
        <h2>Server Data:</h2>
        <pre>{JSON.stringify(props, null, 2)}</pre>
      </div>
      
      {/* Add your custom JSX here */}
      {props.title && <h2>{props.title}</h2>}
      {props.description && <p>{props.description}</p>}
      {props.users && (
        <div>
          <h3>Users:</h3>
          <ul>
            {props.users.map((user, index) => (
              <li key={index}>{user.name || user}</li>
            ))}
          </ul>
        </div>
      )}
    </div>
  );
}
`.trim();

  fs.writeFileSync(tsxFileName, template, "utf8");
  console.log(`âœ… Generated React view: ${tsxFileName}`);
}
