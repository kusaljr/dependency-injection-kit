import * as fs from "fs";
import * as path from "path";

export function generateReactView(
  controllerClassName: string,
  methodName: string,
  controllerFilePath: string,
  routePath: string // This routePath is used for display in the template
) {
  const fileDir = path.dirname(controllerFilePath);
  // Define the target views directory relative to the controller's directory
  const viewsDir = path.join(fileDir, "views");

  // Ensure the 'views' directory exists
  if (!fs.existsSync(viewsDir)) {
    fs.mkdirSync(viewsDir, { recursive: true });
    console.log(`Created directory: ${viewsDir}`);
  }

  const tsxFileName = `${controllerClassName.toLowerCase()}.${methodName}.tsx`;
  // Place the TSX file inside the 'views' directory
  const tsxFilePath = path.join(viewsDir, tsxFileName);
  const componentName = `${controllerClassName}_${methodName}`;

  if (fs.existsSync(tsxFilePath)) {
    console.log(`❕ React view already exists: ${tsxFilePath}`);
    return; // File already exists
  }

  const template = `
    import React from "react";

    // Auto-generated by @React() for route: ${routePath}
    export default function ${componentName}({ data }: { data: any }) {
      return (
        <div>
          <h2>Data from ${routePath}</h2>
          <pre>{JSON.stringify(data, null, 2)}</pre>
        </div>
      );
    }
    `.trim();

  fs.writeFileSync(tsxFilePath, template, "utf8");
  console.log(`✅ Generated React view: ${tsxFilePath}`);
}
