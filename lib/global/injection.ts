// This file is auto-generated by the injection watcher. Do not modify manually.
// It registers all exported classes with the DI container.
// Generated on: 2025-06-18T07:05:24.855Z

import * as module0 from '../../src/gateways/socket.gateway';
import * as module1 from '../../src/modules/products/product.controller';
import * as module2 from '../../src/modules/user/jwt-middleware';
import * as module3 from '../../src/modules/user/user.controller';
import * as module4 from '../../src/modules/user/user.interceptors';
import * as module5 from '../../src/modules/user/user.service';
import * as module6 from '../ops/circuit-breaker/circuit-breaker';
import * as module7 from '../ops/rate-limit/test';
import * as module8 from '../ops/rate-limit/rate-limit';

import { Container } from './container';
const container = Container.getInstance();

Object.values(module0).forEach(cls => {
  if (typeof cls === 'function') container.register(cls);
});
Object.values(module1).forEach(cls => {
  if (typeof cls === 'function') container.register(cls);
});
Object.values(module2).forEach(cls => {
  if (typeof cls === 'function') container.register(cls);
});
Object.values(module3).forEach(cls => {
  if (typeof cls === 'function') container.register(cls);
});
Object.values(module4).forEach(cls => {
  if (typeof cls === 'function') container.register(cls);
});
Object.values(module5).forEach(cls => {
  if (typeof cls === 'function') container.register(cls);
});
Object.values(module6).forEach(cls => {
  if (typeof cls === 'function') container.register(cls);
});
Object.values(module7).forEach(cls => {
  if (typeof cls === 'function') container.register(cls);
});
Object.values(module8).forEach(cls => {
  if (typeof cls === 'function') container.register(cls);
});

// Example export: resolve whatever you need manually
// export const myService = container.resolve(MyService);
